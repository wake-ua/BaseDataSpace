{
	"info": {
		"_postman_id": "ac18fd36-246c-4042-920f-f468dbb43eba",
		"name": "BaseDS-EDC",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "11847558"
	},
	"item": [
		{
			"name": "Health",
			"item": [
				{
					"name": "Provider Health",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{HOST_URL}}:{{PROVIDER_HTTP_PORT}}/api/health",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{PROVIDER_HTTP_PORT}}",
							"path": [
								"api",
								"health"
							]
						}
					},
					"response": []
				},
				{
					"name": "Provider Template Health",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{HOST_URL}}:{{PROVIDER-TEMPLATE_HTTP_PORT}}/api/health",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{PROVIDER-TEMPLATE_HTTP_PORT}}",
							"path": [
								"api",
								"health"
							]
						}
					},
					"response": []
				},
				{
					"name": "Provider Template Health Template Endpoint",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{HOST_URL}}:{{PROVIDER-TEMPLATE_HTTP_PORT}}/api/template",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{PROVIDER-TEMPLATE_HTTP_PORT}}",
							"path": [
								"api",
								"template"
							]
						}
					},
					"response": []
				},
				{
					"name": "Consumer Health",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{HOST_URL}}:{{CONSUMER_HTTP_PORT}}/api/health",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{CONSUMER_HTTP_PORT}}",
							"path": [
								"api",
								"health"
							]
						}
					},
					"response": []
				},
				{
					"name": "Federated Catalog Health",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{HOST_URL}}:{{FEDERATED_CATALOG_HTTP}}/api/health",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{FEDERATED_CATALOG_HTTP}}",
							"path": [
								"api",
								"health"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Create Asset Base Provider",
			"item": [
				{
					"name": "Create Asset",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code == 200){",
									"    pm.environment.set(\"ASSET_ID\", pm.response.json()[\"@id\"]);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"@id\": \"assetId\",\n  \"properties\": {\n    \"name\": \"product description\",\n    \"contenttype\": \"application/json\",\n    \"dcterms:name\": \"test name\",\n    \"special\": \"test\"\n    },\n  \"dataAddress\": [{\n    \"type\": \"HttpData\",\n    \"name\": \"Test asset distribution\",\n    \"baseUrl\": \"https://jsonplaceholder.typicode.com/users\",\n    \"proxyPath\": \"true\"\n  }]\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{PROVIDER_MANAGEMENT_PORT}}/management/v3/assets",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{PROVIDER_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"assets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Asset 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code == 200){",
									"    pm.environment.set(\"ASSET_ID\", pm.response.json()[\"@id\"]);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"@id\": \"assetId2\",\n  \"properties\": {\n    \"name\": \"item description\",\n    \"contenttype\": \"application/json\",\n    \"dcterms:name\": \"second item\",\n    \"special\": \"test\"\n    },\n  \"dataAddress\": [{\n    \"type\": \"HttpData\",\n    \"name\": \"Test asset 2 distribution\",\n    \"baseUrl\": \"https://jsonplaceholder.typicode.com/users\",\n    \"proxyPath\": \"true\"\n  }]\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{PROVIDER_MANAGEMENT_PORT}}/management/v3/assets",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{PROVIDER_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"assets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Asset 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code == 200){",
									"    pm.environment.set(\"ASSET_ID\", pm.response.json()[\"@id\"]);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"@id\": \"assetId3\",\n  \"properties\": {\n    \"name\": \"item description\",\n    \"contenttype\": \"application/json\",\n    \"dcterms:name\": \"third item\",\n    \"special\": \"test\"\n    },\n  \"dataAddress\": [{\n    \"type\": \"HttpData\",\n    \"name\": \"Test asset 3 distribution\",\n    \"baseUrl\": \"https://jsonplaceholder.typicode.com/users\",\n    \"proxyPath\": \"true\"\n  }]\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{PROVIDER_MANAGEMENT_PORT}}/management/v3/assets",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{PROVIDER_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"assets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Asset",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{PROVIDER_MANAGEMENT_PORT}}/management/v3/assets/{{ASSET_ID}}",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{PROVIDER_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"assets",
								"{{ASSET_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Asset FAIL",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"@id\": \"assetIdBad\",\n  \"properties\": {\n    \"name\": \"product description\",\n    \"contenttype\": \"application/json\",\n    \"description\": \"THIS CALL SHOULD FAIL - ValidationFailure\",\n    \"special\": 5\n  },\n  \"privateProperties\": {\n    \"name2\": 1\n  },\n  \"dataAddress\": {\n    \"type\": \"HttpData\",\n    \"name\": \"Test asset distribution\",\n    \"baseUrl\": \"https://jsonplaceholder.typicode.com/users\",\n    \"proxyPath\": \"true\"\n  }\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{PROVIDER_MANAGEMENT_PORT}}/management/v3/assets",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{PROVIDER_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"assets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Policy",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\",\n    \"odrl\": \"http://www.w3.org/ns/odrl/2/\"\n  },\n  \"@id\": \"aPolicy\",\n  \"policy\": {\n    \"@context\": \"http://www.w3.org/ns/odrl.jsonld\",\n    \"@type\": \"Set\",\n    \"permission\": [],\n    \"prohibition\": [],\n    \"obligation\": []\n  }\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{PROVIDER_MANAGEMENT_PORT}}/management/v3/policydefinitions",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{PROVIDER_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"policydefinitions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Contract Definition",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"@id\": \"1\",\n  \"accessPolicyId\": \"aPolicy\",\n  \"contractPolicyId\": \"aPolicy\",\n  \"assetsSelector\": []\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{PROVIDER_MANAGEMENT_PORT}}/management/v3/contractdefinitions",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{PROVIDER_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"contractdefinitions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Provider Catalog",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"counterPartyAddress\": \"{{HOST_URL}}:{{PROVIDER_PROTOCOL_PORT}}/protocol\",\n  \"protocol\": \"dataspace-protocol-http\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{CONSUMER_MANAGEMENT_PORT}}/management/v3/catalog/request",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{CONSUMER_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"catalog",
								"request"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Create Asset Template Provider",
			"item": [
				{
					"name": "Create Asset",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code == 200){",
									"    pm.environment.set(\"ASSET_ID\", pm.response.json()[\"@id\"]);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"@id\": \"assetIdTemplate 1\",\n  \"properties\": {\n    \"name\": \"product template description\",\n    \"contenttype\": \"application/json\",\n    \"dcterms:name\": \"test template title\",\n    \"special\": \"test template\"\n    },\n  \"dataAddress\": [{\n    \"type\": \"HttpData\",\n    \"name\": \"Test asset template distribution\",\n    \"baseUrl\": \"https://jsonplaceholder.typicode.com/users\",\n    \"proxyPath\": \"true\"\n  }]\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{PROVIDER-TEMPLATE_MANAGEMENT_PORT}}/management/v3/assets",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{PROVIDER-TEMPLATE_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"assets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Asset 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code == 200){",
									"    pm.environment.set(\"ASSET_ID\", pm.response.json()[\"@id\"]);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"@id\": \"assetIdtemplate 2\",\n  \"properties\": {\n    \"name\": \"product template 2 description\",\n    \"contenttype\": \"application/json\",\n    \"dcterms:name\": \"test template 2 name\",\n    \"special\": \"test\"\n    },\n  \"dataAddress\": [{\n    \"type\": \"HttpData\",\n    \"name\": \"Test template 2 asset distribution\",\n    \"baseUrl\": \"https://jsonplaceholder.typicode.com/users\",\n    \"proxyPath\": \"true\"\n  }]\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{PROVIDER-TEMPLATE_MANAGEMENT_PORT}}/management/v3/assets",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{PROVIDER-TEMPLATE_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"assets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Asset",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{PROVIDER-TEMPLATE_MANAGEMENT_PORT}}/management/v3/assets/{{ASSET_ID}}",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{PROVIDER-TEMPLATE_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"assets",
								"{{ASSET_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Policy",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\",\n    \"odrl\": \"http://www.w3.org/ns/odrl/2/\"\n  },\n  \"@id\": \"aPolicyTemplate\",\n  \"policy\": {\n    \"@context\": \"http://www.w3.org/ns/odrl.jsonld\",\n    \"@type\": \"Set\",\n    \"permission\": [],\n    \"prohibition\": [],\n    \"obligation\": []\n  }\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{PROVIDER-TEMPLATE_MANAGEMENT_PORT}}/management/v3/policydefinitions",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{PROVIDER-TEMPLATE_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"policydefinitions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Contract Definition",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"@id\": \"1\",\n  \"accessPolicyId\": \"aPolicyTemplate\",\n  \"contractPolicyId\": \"aPolicyTemplate\",\n  \"assetsSelector\": []\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{PROVIDER-TEMPLATE_MANAGEMENT_PORT}}/management/v3/contractdefinitions",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{PROVIDER-TEMPLATE_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"contractdefinitions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Provider Catalog",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"counterPartyAddress\": \"{{HOST_URL}}:{{PROVIDER-TEMPLATE_PROTOCOL_PORT}}/protocol\",\n  \"protocol\": \"dataspace-protocol-http\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{CONSUMER_MANAGEMENT_PORT}}/management/v3/catalog/request",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{CONSUMER_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"catalog",
								"request"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Federated Catalog",
			"item": [
				{
					"name": "Catalog Empty Query",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"@type\": \"QuerySpec\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{FEDERATED_CATALOG_QUERY_PORT}}/api/catalog/v1alpha/catalog/query",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{FEDERATED_CATALOG_QUERY_PORT}}",
							"path": [
								"api",
								"catalog",
								"v1alpha",
								"catalog",
								"query"
							]
						}
					},
					"response": []
				},
				{
					"name": "Catalog id Query",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"@type\": \"QuerySpec\",\n    \"offset\": 0,\n    \"limit\": 57,\n    \"filterExpression\": [\n        {\n            \"@type\": \"Criterion\",\n            \"operandLeft\": \"id\",\n            \"operator\": \"=\",\n            \"operandRight\": \"assetIdTemplate 1\"\n        }\n    ]\n  \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{FEDERATED_CATALOG_QUERY_PORT}}/api/catalog/v1alpha/catalog/query",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{FEDERATED_CATALOG_QUERY_PORT}}",
							"path": [
								"api",
								"catalog",
								"v1alpha",
								"catalog",
								"query"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Provider Catalog from FC",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// get the id of one asset and save it as an environment variable",
									"if(pm.response.code == 200){",
									"    const dcat_dataset = pm.response.json()[\"dcat:dataset\"]",
									"    if (Array.isArray(dcat_dataset)) {",
									"        pm.environment.set(\"ASSET_ID\", dcat_dataset[0][\"@id\"]);",
									"        pm.environment.set(\"CONTRACT_OFFER_ID\", dcat_dataset[0][\"odrl:hasPolicy\"][\"@id\"]);",
									"    } else {",
									"        pm.environment.set(\"ASSET_ID\", dcat_dataset[\"@id\"]);",
									"        pm.environment.set(\"CONTRACT_OFFER_ID\", dcat_dataset[\"odrl:hasPolicy\"][\"@id\"]);",
									"    }",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"counterPartyAddress\": \"{{HOST_URL}}:{{PROVIDER_PROTOCOL_PORT}}/protocol\",\n  \"protocol\": \"dataspace-protocol-http\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{FEDERATED_CATALOG_MANAGEMENT_PORT}}/management/v3/catalog/request",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{FEDERATED_CATALOG_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"catalog",
								"request"
							]
						}
					},
					"response": []
				},
				{
					"name": "Negotiate Contract from FC",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// get the id of one asset and save it as an environment variable",
									"if(pm.response.code == 200){",
									"    pm.environment.set(\"CONTRACT_ID\", pm.response.json()[\"@id\"]);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"@type\": \"ContractRequest\",\n  \"counterPartyAddress\": \"{{HOST_URL}}:{{PROVIDER_PROTOCOL_PORT}}/protocol\",\n  \"protocol\": \"dataspace-protocol-http\",\n  \"policy\": {\n    \"@context\": \"http://www.w3.org/ns/odrl.jsonld\",\n    \"@id\": \"{{CONTRACT_OFFER_ID}}\",\n    \"@type\": \"Offer\",\n    \"assigner\": \"provider-base\",\n    \"target\": \"{{ASSET_ID}}\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{FEDERATED_CATALOG_MANAGEMENT_PORT}}/management/v3/contractnegotiations",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{FEDERATED_CATALOG_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"contractnegotiations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Contract from FC",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// get the id of one asset and save it as an environment variable",
									"if(pm.response.code == 200){",
									"    pm.environment.set(\"CONTRACT_AGREEMENT_ID\", pm.response.json()[\"contractAgreementId\"]);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{FEDERATED_CATALOG_MANAGEMENT_PORT}}/management/v3/contractnegotiations/{{CONTRACT_ID}}",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{FEDERATED_CATALOG_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"contractnegotiations",
								"{{CONTRACT_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Start Transfer from FC",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// get the id of one asset and save it as an environment variable",
									"if(pm.response.code == 200){",
									"    pm.environment.set(\"CONTRACT_ID\", pm.response.json()[\"@id\"]);",
									"",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"@type\": \"TransferRequestDto\",\n  \"connectorId\": \"provider-base\",\n  \"counterPartyAddress\": \"{{HOST_URL}}:{{PROVIDER_PROTOCOL_PORT}}/protocol\",\n  \"contractId\": \"{{CONTRACT_AGREEMENT_ID}}\",\n  \"assetId\": \"{{ASSET_ID}}\",\n  \"protocol\": \"dataspace-protocol-http\",\n  \"transferType\": \"HttpData-PUSH\",\n  \"dataDestination\": {\n    \"type\": \"HttpData\",\n    \"baseUrl\": \"http://localhost:4000/api/consumer/store\"\n  }\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{FEDERATED_CATALOG_MANAGEMENT_PORT}}/management/v3/transferprocesses",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{FEDERATED_CATALOG_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"transferprocesses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Node Directory",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{FEDERATED_CATALOG_MANAGEMENT_PORT}}/management/v1alpha/directory",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{FEDERATED_CATALOG_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v1alpha",
								"directory"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Node Directory",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "  {\n    \"name\": \"Default Base Provider\",\n    \"id\": \"provider\",\n    \"url\": \"http://localhost:19194/protocol\",\n    \"supportedProtocols\": [\"dataspace-protocol-http\"],\n        \"@context\": {\n            \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n        }\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{FEDERATED_CATALOG_MANAGEMENT_PORT}}/management/v1alpha/directory",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{FEDERATED_CATALOG_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v1alpha",
								"directory"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Node Directory Template",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "    {\n        \"name\": \"Template Provider\",\n        \"id\": \"provider-template\",\n        \"url\": \"http://localhost:18194/protocol\",\n        \"supportedProtocols\": [\"dataspace-protocol-http\"],\n        \"@context\": {\n            \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n        }\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{FEDERATED_CATALOG_MANAGEMENT_PORT}}/management/v1alpha/directory",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{FEDERATED_CATALOG_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v1alpha",
								"directory"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Node Directory eBIRD",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "    {\n        \"name\": \"Template eBIRD\",\n        \"id\": \"provider-ebird\",\n        \"url\": \"http://localhost:17194/protocol\",\n        \"supportedProtocols\": [\"dataspace-protocol-http\"],\n        \"@context\": {\n            \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n        }\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{FEDERATED_CATALOG_MANAGEMENT_PORT}}/management/v1alpha/directory",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{FEDERATED_CATALOG_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v1alpha",
								"directory"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Node Directory",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{FEDERATED_CATALOG_MANAGEMENT_PORT}}/management/v1alpha/directory/provider-template",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{FEDERATED_CATALOG_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v1alpha",
								"directory",
								"provider-template"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Transfer",
			"item": [
				{
					"name": "Get Provider Catalog",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// get the id of one asset and save it as an environment variable",
									"if(pm.response.code == 200){",
									"    const dcat_dataset = pm.response.json()[\"dcat:dataset\"]",
									"    if (Array.isArray(dcat_dataset)) {",
									"        pm.environment.set(\"ASSET_ID\", dcat_dataset[0][\"@id\"]);",
									"        pm.environment.set(\"CONTRACT_OFFER_ID\", dcat_dataset[0][\"odrl:hasPolicy\"][\"@id\"]);",
									"    } else {",
									"        pm.environment.set(\"ASSET_ID\", dcat_dataset[\"@id\"]);",
									"        pm.environment.set(\"CONTRACT_OFFER_ID\", dcat_dataset[\"odrl:hasPolicy\"][\"@id\"]);",
									"    }",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"counterPartyAddress\": \"{{HOST_URL}}:{{PROVIDER_PROTOCOL_PORT}}/protocol\",\n  \"protocol\": \"dataspace-protocol-http\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{CONSUMER_MANAGEMENT_PORT}}/management/v3/catalog/request",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{CONSUMER_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"catalog",
								"request"
							]
						}
					},
					"response": []
				},
				{
					"name": "Negotiate Contract",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// get the id of one asset and save it as an environment variable",
									"if(pm.response.code == 200){",
									"    pm.environment.set(\"CONTRACT_ID\", pm.response.json()[\"@id\"]);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"@type\": \"ContractRequest\",\n  \"counterPartyAddress\": \"{{HOST_URL}}:{{PROVIDER_PROTOCOL_PORT}}/protocol\",\n  \"protocol\": \"dataspace-protocol-http\",\n  \"policy\": {\n    \"@context\": \"http://www.w3.org/ns/odrl.jsonld\",\n    \"@id\": \"{{CONTRACT_OFFER_ID}}\",\n    \"@type\": \"Offer\",\n    \"assigner\": \"provider-base\",\n    \"target\": \"{{ASSET_ID}}\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{CONSUMER_MANAGEMENT_PORT}}/management/v3/contractnegotiations",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{CONSUMER_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"contractnegotiations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Contract",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// get the id of one asset and save it as an environment variable",
									"if(pm.response.code == 200){",
									"    pm.environment.set(\"CONTRACT_AGREEMENT_ID\", pm.response.json()[\"contractAgreementId\"]);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{CONSUMER_MANAGEMENT_PORT}}/management/v3/contractnegotiations/{{CONTRACT_ID}}",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{CONSUMER_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"contractnegotiations",
								"{{CONTRACT_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Start Transfer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"@type\": \"TransferRequestDto\",\n  \"connectorId\": \"provider-base\",\n  \"counterPartyAddress\": \"{{HOST_URL}}:{{PROVIDER_PROTOCOL_PORT}}/protocol\",\n  \"contractId\": \"{{CONTRACT_AGREEMENT_ID}}\",\n  \"assetId\": \"{{ASSET_ID}}\",\n  \"protocol\": \"dataspace-protocol-http\",\n  \"transferType\": \"HttpData-PUSH\",\n  \"dataDestination\": {\n    \"type\": \"HttpData\",\n    \"baseUrl\": \"http://localhost:4000/api/consumer/store\"\n  }\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{CONSUMER_MANAGEMENT_PORT}}/management/v3/transferprocesses",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{CONSUMER_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"transferprocesses"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "PROVIDER_HTTP_PORT",
			"value": "19191",
			"type": "string"
		},
		{
			"key": "PROVIDER-TEMPLATE_HTTP_PORT",
			"value": "18191",
			"type": "string"
		},
		{
			"key": "CONSUMER_HTTP_PORT",
			"value": "29191",
			"type": "string"
		},
		{
			"key": "FEDERATED_CATALOG_HTTP",
			"value": "39191",
			"type": "string"
		},
		{
			"key": "HOST_URL",
			"value": "http://localhost",
			"type": "string"
		},
		{
			"key": "PROVIDER_MANAGEMENT_PORT",
			"value": "19193",
			"type": "string"
		},
		{
			"key": "CONSUMER_MANAGEMENT_PORT",
			"value": "29193",
			"type": "string"
		},
		{
			"key": "FEDERATED_CATALOG_QUERY_PORT",
			"value": "39195",
			"type": "string"
		},
		{
			"key": "PROVIDER_PROTOCOL_PORT",
			"value": "19194",
			"type": "string"
		},
		{
			"key": "PROVIDER-TEMPLATE_PROTOCOL_PORT",
			"value": "18194",
			"type": "string"
		},
		{
			"key": "FEDERATED_CATALOG_MANAGEMENT_PORT",
			"value": "39193",
			"type": "string"
		},
		{
			"key": "PROVIDER-TEMPLATE_MANAGEMENT_PORT",
			"value": "18193",
			"type": "string"
		}
	]
}