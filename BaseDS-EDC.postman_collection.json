{
	"info": {
		"_postman_id": "ac18fd36-246c-4042-920f-f468dbb43eba",
		"name": "BaseDS-EDC",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "11847558"
	},
	"item": [
		{
			"name": "Health",
			"item": [
				{
					"name": "Provider Health",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{HOST_URL}}:{{PROVIDER_HTTP_PORT}}/api/health",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{PROVIDER_HTTP_PORT}}",
							"path": [
								"api",
								"health"
							]
						}
					},
					"response": []
				},
				{
					"name": "Consumer Health",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{HOST_URL}}:{{CONSUMER_HTTP_PORT}}/api/health",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{CONSUMER_HTTP_PORT}}",
							"path": [
								"api",
								"health"
							]
						}
					},
					"response": []
				},
				{
					"name": "Federated Catalog Health",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{HOST_URL}}:{{FEDERATED_CATALOG_HTTP}}/api/health",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{FEDERATED_CATALOG_HTTP}}",
							"path": [
								"api",
								"health"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Create Asset Base Provider",
			"item": [
				{
					"name": "Create Asset",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code == 200){",
									"    pm.environment.set(\"ASSET_ID\", pm.response.json()[\"@id\"]);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"@id\": \"assetId\",\n  \"properties\": {\n    \"name\": \"product description\",\n    \"contenttype\": \"application/json\",\n    \"dcterms:name\": \"test name\",\n    \"special\": \"test\"\n    },\n  \"dataAddress\": [{\n    \"type\": \"HttpData\",\n    \"name\": \"Test asset distribution\",\n    \"baseUrl\": \"https://jsonplaceholder.typicode.com/users\",\n    \"proxyPath\": \"true\"\n  }]\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{PROVIDER_MANAGEMENT_PORT}}/management/v3/assets",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{PROVIDER_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"assets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Asset 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code == 200){",
									"    pm.environment.set(\"ASSET_ID\", pm.response.json()[\"@id\"]);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\",\n    \"dct\": \"http://purl.org/dc/terms/\"\n  },\n  \"@id\": \"assetId2\",\n  \"properties\": {\n    \"name\": \"second item\",\n    \"contenttype\": \"application/json\",\n    \"dct:name\": \"second item\"\n    },\n  \"dataAddress\": [{\n    \"type\": \"HttpData\",\n    \"name\": \"Test asset 2 distribution\",\n    \"baseUrl\": \"https://jsonplaceholder.typicode.com/users\",\n    \"proxyPath\": \"true\"\n  }]\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{PROVIDER_MANAGEMENT_PORT}}/management/v3/assets",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{PROVIDER_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"assets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Asset 2 CBM",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code == 200){",
									"    pm.environment.set(\"ASSET_ID\", pm.response.json()[\"@id\"]);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\n{\n\t\"@id\": \"assetId2cbm\",\n\t\"@type\": \"dcat:Dataset\",\n\t\"dcat:distribution\": [{\n\t\t\t\"@type\": \"dcat:Distribution\",\n\t\t\t\"dct:title\": \"Test asset 2 distribution\",\n\t\t\t\"dct:format\": {\n\t\t\t\t\"@id\": \"HttpData\"\n\t\t\t},\n\t\t\t\"dcat:accessURL\": \"https://jsonplaceholder.typicode.com/users\",\n\t\t\t\"proxyPath\": \"true\"\n\t\t}],\n\t\"name\": \"second item\",\n\t\"dct:name\": \"second item\",\n\t\"contenttype\": \"application/json\",\n    \"@context\": {\n        \"dcat\": \"http://www.w3.org/ns/dcat#\",\n        \"dct\": \"http://purl.org/dc/terms/\",\n        \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{PROVIDER_MANAGEMENT_PORT}}/management/v3/assets-cbm",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{PROVIDER_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"assets-cbm"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Asset 2 CBM Bad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code == 200){",
									"    pm.environment.set(\"ASSET_ID\", pm.response.json()[\"@id\"]);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\n{\n\t\"@id\": \"assetId2cbm\",\n\t\"@type\": \"dcat:Dataset\",\n\t\"dcat:distribution\": [{\n\t\t\t\"@type\": \"dcat:Distribution\",\n\t\t\t\"dct:title\": \"Test asset 2 distribution\",\n\t\t\t\"dct:format\": {\n\t\t\t\t\"@id\": \"HttpData\"\n\t\t\t},\n\t\t\t\"dcat:accessURL\": \"https://jsonplaceholder.typicode.com/users\",\n\t\t\t\"proxyPath\": \"true\"\n\t\t}],\n    \"cbm:isSampleOf\": \"ert\",\n\t\"name\": \"second item\",\n\t\"dct:name\": \"second item\",\n\t\"contenttype\": \"application/json\",\n    \"@context\": {\n        \"cbm\": \"https://w3id.org/cbm/v0.0.1/ns/\",\n        \"dcat\": \"http://www.w3.org/ns/dcat#\",\n        \"dct\": \"http://purl.org/dc/terms/\",\n        \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{PROVIDER_MANAGEMENT_PORT}}/management/v3/assets-cbm",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{PROVIDER_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"assets-cbm"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Asset 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code == 200){",
									"    pm.environment.set(\"ASSET_ID\", pm.response.json()[\"@id\"]);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"@id\": \"assetId3\",\n  \"properties\": {\n    \"name\": \"item description\",\n    \"contenttype\": \"application/json\",\n    \"dcterms:name\": \"third item\",\n    \"special\": \"test\"\n    },\n  \"dataAddress\": [{\n    \"type\": \"HttpData\",\n    \"name\": \"Test asset 3 distribution\",\n    \"baseUrl\": \"https://jsonplaceholder.typicode.com/users\",\n    \"proxyPath\": \"true\"\n  }]\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{PROVIDER_MANAGEMENT_PORT}}/management/v3/assets",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{PROVIDER_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"assets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Asset 4 Ctxt",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code == 200){",
									"    pm.environment.set(\"ASSET_ID\", pm.response.json()[\"@id\"]);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\",\n    \"schema\": \"https://schema.org/\",\n    \"dcterms\": \"http://purl.org/dc/terms/\",\n    \"cbm\": \"https://w3id.org/cbm/v0.0.1/ns/\",\n    \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\"\n  },\n  \"@id\": \"assetId4\",\n  \"properties\": {\n    \"name\": \"product  4 description REIMPORT\",\n    \"contenttype\": \"application/json\",\n    \"schema:name\": \"test template 4 name\",\n    \"dcterms:title\": \"test template 4 name\",\n    \"cbm:hasSample\": [\"assetId4Sample\"],\n    \"cbm:hasDataDictionary\": {\n        \"cbm:hasField\": [\n            {\n                \"schema:name\": \"username\",\n                \"dcterms:title\": \"User Name\",\n                \"rdfs:type\": \"string\",\n                \"dcterms:description\": \"Name of the user\",\n                \"cbm:sampleValue\": \"bret\"\n            },\n            {\n                \"schema:name\": \"id\",\n                \"dcterms:title\": \"User Identifier\",\n                \"rdfs:type\": \"integer\",\n                \"dcterms:description\": \"Id of the user\",\n                \"cbm:sampleValue\": \"1\"\n            }\n        ]\n    }\n  },\n  \"dataAddress\": [{\n    \"type\": \"HttpData\",\n    \"name\": \"Test  4 asset distribution\",\n    \"baseUrl\": \"https://jsonplaceholder.typicode.com/users\",\n    \"proxyPath\": \"true\",\n    \"extra\": \"extra\"\n  }]\n  \n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{PROVIDER_MANAGEMENT_PORT}}/management/v3/assets",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{PROVIDER_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"assets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Asset 4 CBM",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code == 200){",
									"    pm.environment.set(\"ASSET_ID\", pm.response.json()[\"@id\"]);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"@id\": \"assetId4Cbm\",\n\t\"@type\": \"dcat:Dataset\",\n\t    \"dcat:distribution\": [\n\t\t{\n\t\t\t\"@type\": \"dcat:Distribution\",\n\t\t\t\"dct:format\": {\n\t\t\t\t\"@id\": \"HttpData\"\n\t\t\t},\n\t\t    \"name\": \"Test  4 sample asset distribution\",\n\t\t\t\"dcat:accessURL\": \"https://jsonplaceholder.typicode.com/users\",\n\t\t\t\"proxyPath\": \"true\",\n\t\t\t\"cbm:hasDataDictionary\": {\n\t\t\t\t\"cbm:hasField\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"schema:name\": \"username\",\n\t\t\t\t\t\t\"dct:title\": \"User Name\",\n\t\t\t\t\t\t\"http://www.w3.org/2000/01/rdf-schema#type\": \"string\",\n\t\t\t\t\t\t\"dct:description\": \"Name of the user\",\n\t\t\t\t\t\t\"cbm:sampleValue\": \"bret\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"schema:name\": \"id\",\n\t\t\t\t\t\t\"dct:title\": \"User Identifier\",\n\t\t\t\t\t\t\"http://www.w3.org/2000/01/rdf-schema#type\": \"integer\",\n\t\t\t\t\t\t\"dct:description\": \"Id of the user\",\n\t\t\t\t\t\t\"cbm:sampleValue\": \"1\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t],\n\t\"schema:name\": \"test template 4 name\",\n\t\"name\": \"product  4 \",\n\t\"dct:title\": \"test template 4 name\",\n\t\"contenttype\": \"application/json\",\n    \"cbm:hasSample\": [\"assetId4Sample\", \"anotherSample\"],\n\t\"@context\": {\n\t\t\"schema\": \"https://schema.org/\",\n\t\t\"cbm\": \"https://w3id.org/cbm/v0.0.1/ns/\",\n\t\t\"dcat\": \"http://www.w3.org/ns/dcat#\",\n\t\t\"dct\": \"http://purl.org/dc/terms/\",\n\t\t\"odrl\": \"http://www.w3.org/ns/odrl/2/\",\n\t\t\"dspace\": \"https://w3id.org/dspace/v0.8/\",\n\t\t\"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\",\n\t\t\"edc\": \"https://w3id.org/edc/v0.0.1/ns/\"\n    }\n}\n\n\n    \n    \n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{PROVIDER_MANAGEMENT_PORT}}/management/v3/assets-cbm",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{PROVIDER_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"assets-cbm"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Asset 5 CBM Auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code == 200){",
									"    pm.environment.set(\"ASSET_ID\", pm.response.json()[\"@id\"]);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"@id\": \"assetId5\",\n\t\"@type\": \"dcat:Dataset\",\n\t    \"dcat:distribution\": [\n\t\t{\n\t\t\t\"@type\": \"dcat:Distribution\",\n\t\t\t\"dct:format\": {\n\t\t\t\t\"@id\": \"HttpData\"\n\t\t\t},\n\t\t    \"name\": \"Test  4 sample asset distribution\",\n\t\t\t\"dcat:accessURL\": \"https://jsonplaceholder.typicode.com/users\",\n\t\t\t\"proxyPath\": \"true\",\n            \"authKey\": \"x-ebirdapitoken\",\n            \"authCode\": \"authCode\",\n\t\t\t\"cbm:hasDataDictionary\": {\n\t\t\t\t\"cbm:hasField\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"schema:name\": \"username\",\n\t\t\t\t\t\t\"dct:title\": \"User Name\",\n\t\t\t\t\t\t\"http://www.w3.org/2000/01/rdf-schema#type\": \"string\",\n\t\t\t\t\t\t\"dct:description\": \"Name of the user\",\n\t\t\t\t\t\t\"cbm:sampleValue\": \"bret\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"schema:name\": \"id\",\n\t\t\t\t\t\t\"dct:title\": \"User Identifier\",\n\t\t\t\t\t\t\"http://www.w3.org/2000/01/rdf-schema#type\": \"integer\",\n\t\t\t\t\t\t\"dct:description\": \"Id of the user\",\n\t\t\t\t\t\t\"cbm:sampleValue\": \"1\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t],\n\t\"schema:name\": \"test template 4 name\",\n\t\"name\": \"product  4 \",\n\t\"dct:title\": \"test template 4 name\",\n\t\"contenttype\": \"application/json\",\n\t\"@context\": {\n\t\t\"schema\": \"https://schema.org/\",\n\t\t\"cbm\": \"https://w3id.org/cbm/v0.0.1/ns/\",\n\t\t\"dcat\": \"http://www.w3.org/ns/dcat#\",\n\t\t\"dct\": \"http://purl.org/dc/terms/\",\n\t\t\"odrl\": \"http://www.w3.org/ns/odrl/2/\",\n\t\t\"dspace\": \"https://w3id.org/dspace/v0.8/\",\n\t\t\"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\",\n\t\t\"edc\": \"https://w3id.org/edc/v0.0.1/ns/\"\n    }\n}\n\n\n    \n    \n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{PROVIDER_MANAGEMENT_PORT}}/management/v3/assets-cbm",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{PROVIDER_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"assets-cbm"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Asset 4 Sample",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code == 200){",
									"    pm.environment.set(\"ASSET_ID\", pm.response.json()[\"@id\"]);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\",\n    \"schema\": \"https://schema.org/\",\n    \"dcterms\": \"http://purl.org/dc/terms/\",\n    \"cbm\": \"https://w3id.org/cbm/v0.0.1/ns/\",\n    \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\"\n  },\n  \"@id\": \"assetId4Sample\",\n  \"properties\": {\n    \"name\": \"product  4 name SAMPLE\",\n    \"contenttype\": \"application/json\",\n    \"schema:name\": \"test template 4 name\",\n    \"dcterms:title\": \"test template 4 name\",\n    \"cbm:isSampleOf\": \"assetId4\",\n    \"schema:algorithm\": \"clustering\",\n    \"cbm:hasDataDictionary\": {\n        \"cbm:hasField\": [\n            {\n                \"schema:name\": \"username\",\n                \"dcterms:title\": \"User Name\",\n                \"rdfs:type\": \"string\",\n                \"dcterms:description\": \"Name of the user\",\n                \"cbm:sampleValue\": \"bret\"\n            },\n            {\n                \"schema:name\": \"id\",\n                \"dcterms:title\": \"User Identifier\",\n                \"rdfs:type\": \"integer\",\n                \"dcterms:description\": \"Id of the user\",\n                \"cbm:sampleValue\": \"1\"\n            }\n        ]\n    }\n  },\n  \"dataAddress\": [{\n    \"type\": \"HttpData\",\n    \"name\": \"Test  4 sample asset distribution\",\n    \"baseUrl\": \"https://jsonplaceholder.typicode.com/users\",\n    \"proxyPath\": \"true\",\n    \"extra\": \"extra\"\n  }]\n  \n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{PROVIDER_MANAGEMENT_PORT}}/management/v3/assets",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{PROVIDER_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"assets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Asset 4 Sample CBM",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code == 200){",
									"    pm.environment.set(\"ASSET_ID\", pm.response.json()[\"@id\"]);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"@id\": \"assetId4Sample\",\n\t\"@type\": \"cbm:Sample\",\n\t    \"dcat:distribution\": [\n\t\t{\n\t\t\t\"@type\": \"dcat:Distribution\",\n\t\t\t\"dct:format\": {\n\t\t\t\t\"@id\": \"HttpData\"\n\t\t\t},\n\t\t    \"name\": \"Test  4 sample asset distribution\",\n\t\t\t\"dcat:accessURL\": \"https://jsonplaceholder.typicode.com/users\",\n\t\t\t\"proxyPath\": \"true\",\n\t\t\t\"cbm:hasDataDictionary\": {\n\t\t\t\t\"cbm:hasField\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"schema:name\": \"username\",\n\t\t\t\t\t\t\"dct:title\": \"User Name\",\n\t\t\t\t\t\t\"http://www.w3.org/2000/01/rdf-schema#type\": \"string\",\n\t\t\t\t\t\t\"dct:description\": \"Name of the user\",\n\t\t\t\t\t\t\"cbm:sampleValue\": \"bret\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"schema:name\": \"id\",\n\t\t\t\t\t\t\"dct:title\": \"User Identifier\",\n\t\t\t\t\t\t\"http://www.w3.org/2000/01/rdf-schema#type\": \"integer\",\n\t\t\t\t\t\t\"dct:description\": \"Id of the user\",\n\t\t\t\t\t\t\"cbm:sampleValue\": \"1\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t],\n\t\"schema:name\": \"test template 4 name\",\n\t\"cbm:isSampleOf\": \"assetId4\",\n\t\"name\": \"product  4 name SAMPLE\",\n\t\"dct:title\": \"test template 4 name\",\n\t\"contenttype\": \"application/json\",\n\t\"schema:algorithm\": \"clustering\",\n\t\"@context\": {\n\t\t\"schema\": \"https://schema.org/\",\n\t\t\"cbm\": \"https://w3id.org/cbm/v0.0.1/ns/\",\n\t\t\"dcat\": \"http://www.w3.org/ns/dcat#\",\n\t\t\"dct\": \"http://purl.org/dc/terms/\",\n\t\t\"odrl\": \"http://www.w3.org/ns/odrl/2/\",\n\t\t\"dspace\": \"https://w3id.org/dspace/v0.8/\",\n\t\t\"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\",\n\t\t\"edc\": \"https://w3id.org/edc/v0.0.1/ns/\"\n    }\n}\n\n\n    \n    \n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{PROVIDER_MANAGEMENT_PORT}}/management/v3/assets-cbm",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{PROVIDER_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"assets-cbm"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Asset FAIL",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"@id\": \"assetIdBad\",\n  \"properties\": {\n    \"name\": \"product description\",\n    \"contenttype\": \"application/json\",\n    \"description\": \"THIS CALL SHOULD FAIL - ValidationFailure\",\n    \"special\": 5\n  },\n  \"privateProperties\": {\n    \"name2\": 1\n  },\n  \"dataAddress\": {\n    \"type\": \"HttpData\",\n    \"name\": \"Test asset distribution\",\n    \"baseUrl\": \"https://jsonplaceholder.typicode.com/users\",\n    \"proxyPath\": \"true\"\n  }\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{PROVIDER_MANAGEMENT_PORT}}/management/v3/assets",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{PROVIDER_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"assets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Asset",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{PROVIDER_MANAGEMENT_PORT}}/management/v3/assets/{{ASSET_ID}}",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{PROVIDER_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"assets",
								"{{ASSET_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Asset",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{PROVIDER_MANAGEMENT_PORT}}/management/v3/assets/{{ASSET_ID}}",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{PROVIDER_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"assets",
								"{{ASSET_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Provider Dataset",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"@context\": { \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\" },\n    \"@type\": \"DatasetRequest\",\n    \"@id\": \"{{ASSET_ID}}\",\n    \"counterPartyAddress\": \"{{HOST_URL}}:{{PROVIDER_PROTOCOL_PORT}}/protocol\",\n    \"counterPartyId\": \"provider-base\",\n    \"protocol\": \"dataspace-protocol-http\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{CONSUMER_MANAGEMENT_PORT}}/management/v3/catalog/dataset/request",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{CONSUMER_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"catalog",
								"dataset",
								"request"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Policy",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\",\n    \"odrl\": \"http://www.w3.org/ns/odrl/2/\"\n  },\n  \"@id\": \"aPolicy\",\n  \"policy\": {\n    \"@context\": \"http://www.w3.org/ns/odrl.jsonld\",\n    \"@type\": \"Set\",\n    \"permission\": [],\n    \"prohibition\": [],\n    \"obligation\": []\n  }\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{PROVIDER_MANAGEMENT_PORT}}/management/v3/policydefinitions",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{PROVIDER_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"policydefinitions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Policy Advanced",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"@id\": \"eu-policy\",\n  \"policy\": {\n    \"@context\": \"http://www.w3.org/ns/odrl.jsonld\",\n    \"@type\": \"Set\",\n    \"permission\": [\n      {\n        \"action\": \"use\",\n        \"constraint\": {\n          \"@type\": \"AtomicConstraint\",\n          \"leftOperand\": \"location\",\n          \"operator\": {\n            \"@id\": \"odrl:eq\"\n          },\n          \"rightOperand\": \"eu\"\n        }\n      }\n    ],\n    \"prohibition\": [],\n    \"obligation\": []\n  }\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{PROVIDER_MANAGEMENT_PORT}}/management/v3/policydefinitions",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{PROVIDER_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"policydefinitions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Contract Definition",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"@id\": \"1\",\n  \"accessPolicyId\": \"aPolicy\",\n  \"contractPolicyId\": \"aPolicy\",\n  \"assetsSelector\": []\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{PROVIDER_MANAGEMENT_PORT}}/management/v3/contractdefinitions",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{PROVIDER_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"contractdefinitions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Contract Definition Advanced",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"@id\": \"2\",\n  \"accessPolicyId\": \"eu-policy\",\n  \"contractPolicyId\": \"eu-policy\",\n  \"assetsSelector\": [\n    {\n        \"@type\": \"CriterionDto\",\n        \"operandLeft\": \"https://w3id.org/edc/v0.0.1/ns/id\",\n        \"operator\": \"=\",\n        \"operandRight\": \"assetId2\"\n    }\n  ]\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{PROVIDER_MANAGEMENT_PORT}}/management/v3/contractdefinitions",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{PROVIDER_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"contractdefinitions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Provider Catalog",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "managementApiKeyConsumerBase",
									"type": "string"
								},
								{
									"key": "key",
									"value": "x-api-key",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"counterPartyAddress\": \"{{HOST_URL}}:{{PROVIDER_PROTOCOL_PORT}}/protocol\",\n  \"protocol\": \"dataspace-protocol-http\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{CONSUMER_MANAGEMENT_PORT}}/management/v3/catalog/request",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{CONSUMER_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"catalog",
								"request"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Provider Catalog Docker",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "managementApiKeyConsumerBase",
									"type": "string"
								},
								{
									"key": "key",
									"value": "x-api-key",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"counterPartyAddress\": \"http://provider-base:{{PROVIDER_PROTOCOL_PORT}}/protocol\",\n  \"protocol\": \"dataspace-protocol-http\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{CONSUMER_MANAGEMENT_PORT}}/management/v3/catalog/request",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{CONSUMER_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"catalog",
								"request"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Provider CBM Catalog",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "managementApiKeyConsumerBase",
									"type": "string"
								},
								{
									"key": "key",
									"value": "x-api-key",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"counterPartyAddress\": \"{{HOST_URL}}:{{PROVIDER_PROTOCOL_PORT}}/protocol\",\n  \"protocol\": \"dataspace-protocol-http\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{CONSUMER_MANAGEMENT_PORT}}/management/v3/catalog-cbm/request-cbm",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{CONSUMER_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"catalog-cbm",
								"request-cbm"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Provider CBM Catalog Docker",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "managementApiKeyConsumerBase",
									"type": "string"
								},
								{
									"key": "key",
									"value": "x-api-key",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"counterPartyAddress\": \"http://provider-base:{{PROVIDER_PROTOCOL_PORT}}/protocol\",\n  \"protocol\": \"dataspace-protocol-http\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{CONSUMER_MANAGEMENT_PORT}}/management/v3/catalog-cbm/request-cbm",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{CONSUMER_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"catalog-cbm",
								"request-cbm"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "apikey",
				"apikey": [
					{
						"key": "value",
						"value": "managementApiKeyProviderBase",
						"type": "string"
					},
					{
						"key": "key",
						"value": "x-api-key",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Federated Catalog",
			"item": [
				{
					"name": "Catalog Query",
					"item": [
						{
							"name": "Catalog Empty Query",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"@type\": \"QuerySpec\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{HOST_URL}}:{{FEDERATED_CATALOG_QUERY_PORT}}/api/catalog/v1alpha/catalog/query",
									"host": [
										"{{HOST_URL}}"
									],
									"port": "{{FEDERATED_CATALOG_QUERY_PORT}}",
									"path": [
										"api",
										"catalog",
										"v1alpha",
										"catalog",
										"query"
									]
								}
							},
							"response": []
						},
						{
							"name": "Catalog Empty Query CBM",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"@type\": \"QuerySpec\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{HOST_URL}}:{{FEDERATED_CATALOG_QUERY_PORT}}/api/catalog/v1alpha/catalog/query-cbm",
									"host": [
										"{{HOST_URL}}"
									],
									"port": "{{FEDERATED_CATALOG_QUERY_PORT}}",
									"path": [
										"api",
										"catalog",
										"v1alpha",
										"catalog",
										"query-cbm"
									]
								}
							},
							"response": []
						},
						{
							"name": "Catalog id Query",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"@type\": \"QuerySpec\",\n    \"offset\": 0,\n    \"limit\": 57,\n    \"filterExpression\": [\n        {\n            \"@type\": \"Criterion\",\n            \"operandLeft\": \"id\",\n            \"operator\": \"=\",\n            \"operandRight\": \"assetId\"\n        }\n    ]\n  \n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{HOST_URL}}:{{FEDERATED_CATALOG_QUERY_PORT}}/api/catalog/v1alpha/catalog/query",
									"host": [
										"{{HOST_URL}}"
									],
									"port": "{{FEDERATED_CATALOG_QUERY_PORT}}",
									"path": [
										"api",
										"catalog",
										"v1alpha",
										"catalog",
										"query"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Provider Catalog from FC",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// get the id of one asset and save it as an environment variable",
											"if(pm.response.code == 200){",
											"    const dcat_dataset = pm.response.json()[\"dcat:dataset\"]",
											"    if (Array.isArray(dcat_dataset)) {",
											"        pm.environment.set(\"ASSET_ID\", dcat_dataset[0][\"@id\"]);",
											"        pm.environment.set(\"CONTRACT_OFFER_ID\", dcat_dataset[0][\"odrl:hasPolicy\"][\"@id\"]);",
											"    } else {",
											"        pm.environment.set(\"ASSET_ID\", dcat_dataset[\"@id\"]);",
											"        pm.environment.set(\"CONTRACT_OFFER_ID\", dcat_dataset[\"odrl:hasPolicy\"][\"@id\"]);",
											"    }",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"counterPartyAddress\": \"{{HOST_URL}}:{{PROVIDER_PROTOCOL_PORT}}/protocol\",\n  \"protocol\": \"dataspace-protocol-http\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{HOST_URL}}:{{FEDERATED_CATALOG_MANAGEMENT_PORT}}/management/v3/catalog/request",
									"host": [
										"{{HOST_URL}}"
									],
									"port": "{{FEDERATED_CATALOG_MANAGEMENT_PORT}}",
									"path": [
										"management",
										"v3",
										"catalog",
										"request"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Provider Catalog from FC Docker",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// get the id of one asset and save it as an environment variable",
											"if(pm.response.code == 200){",
											"    const dcat_dataset = pm.response.json()[\"dcat:dataset\"]",
											"    if (Array.isArray(dcat_dataset)) {",
											"        pm.environment.set(\"ASSET_ID\", dcat_dataset[0][\"@id\"]);",
											"        pm.environment.set(\"CONTRACT_OFFER_ID\", dcat_dataset[0][\"odrl:hasPolicy\"][\"@id\"]);",
											"    } else {",
											"        pm.environment.set(\"ASSET_ID\", dcat_dataset[\"@id\"]);",
											"        pm.environment.set(\"CONTRACT_OFFER_ID\", dcat_dataset[\"odrl:hasPolicy\"][\"@id\"]);",
											"    }",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"counterPartyAddress\": \"http://provider-base:{{PROVIDER_PROTOCOL_PORT}}/protocol\",\n  \"protocol\": \"dataspace-protocol-http\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{HOST_URL}}:{{FEDERATED_CATALOG_MANAGEMENT_PORT}}/management/v3/catalog/request",
									"host": [
										"{{HOST_URL}}"
									],
									"port": "{{FEDERATED_CATALOG_MANAGEMENT_PORT}}",
									"path": [
										"management",
										"v3",
										"catalog",
										"request"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "FC Transfer",
					"item": [
						{
							"name": "Negotiate Contract from FC",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// get the id of one asset and save it as an environment variable",
											"if(pm.response.code == 200){",
											"    pm.environment.set(\"CONTRACT_ID\", pm.response.json()[\"@id\"]);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"@type\": \"ContractRequest\",\n  \"counterPartyAddress\": \"{{HOST_URL}}:{{PROVIDER_PROTOCOL_PORT}}/protocol\",\n  \"protocol\": \"dataspace-protocol-http\",\n  \"policy\": {\n    \"@context\": \"http://www.w3.org/ns/odrl.jsonld\",\n    \"@id\": \"{{CONTRACT_OFFER_ID}}\",\n    \"@type\": \"Offer\",\n    \"assigner\": \"provider-base\",\n    \"target\": \"{{ASSET_ID}}\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{HOST_URL}}:{{FEDERATED_CATALOG_MANAGEMENT_PORT}}/management/v3/contractnegotiations",
									"host": [
										"{{HOST_URL}}"
									],
									"port": "{{FEDERATED_CATALOG_MANAGEMENT_PORT}}",
									"path": [
										"management",
										"v3",
										"contractnegotiations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Negotiate Contract from FC Docker",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// get the id of one asset and save it as an environment variable",
											"if(pm.response.code == 200){",
											"    pm.environment.set(\"CONTRACT_ID\", pm.response.json()[\"@id\"]);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"@type\": \"ContractRequest\",\n  \"counterPartyAddress\": \"http://provider-base:{{PROVIDER_PROTOCOL_PORT}}/protocol\",\n  \"protocol\": \"dataspace-protocol-http\",\n  \"policy\": {\n    \"@context\": \"http://www.w3.org/ns/odrl.jsonld\",\n    \"@id\": \"{{CONTRACT_OFFER_ID}}\",\n    \"@type\": \"Offer\",\n    \"assigner\": \"provider-base\",\n    \"target\": \"{{ASSET_ID}}\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{HOST_URL}}:{{FEDERATED_CATALOG_MANAGEMENT_PORT}}/management/v3/contractnegotiations",
									"host": [
										"{{HOST_URL}}"
									],
									"port": "{{FEDERATED_CATALOG_MANAGEMENT_PORT}}",
									"path": [
										"management",
										"v3",
										"contractnegotiations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Check Contract from FC",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// get the id of one asset and save it as an environment variable",
											"if(pm.response.code == 200){",
											"    pm.environment.set(\"CONTRACT_AGREEMENT_ID\", pm.response.json()[\"contractAgreementId\"]);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{HOST_URL}}:{{FEDERATED_CATALOG_MANAGEMENT_PORT}}/management/v3/contractnegotiations/{{CONTRACT_ID}}",
									"host": [
										"{{HOST_URL}}"
									],
									"port": "{{FEDERATED_CATALOG_MANAGEMENT_PORT}}",
									"path": [
										"management",
										"v3",
										"contractnegotiations",
										"{{CONTRACT_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Start Transfer from FC",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// get the id of one asset and save it as an environment variable",
											"if(pm.response.code == 200){",
											"    pm.environment.set(\"CONTRACT_ID\", pm.response.json()[\"@id\"]);",
											"",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"@type\": \"TransferRequestDto\",\n  \"connectorId\": \"provider-base\",\n  \"counterPartyAddress\": \"{{HOST_URL}}:{{PROVIDER_PROTOCOL_PORT}}/protocol\",\n  \"contractId\": \"{{CONTRACT_AGREEMENT_ID}}\",\n  \"assetId\": \"{{ASSET_ID}}\",\n  \"protocol\": \"dataspace-protocol-http\",\n  \"transferType\": \"HttpData-PUSH\",\n  \"dataDestination\": {\n    \"type\": \"HttpData\",\n    \"baseUrl\": \"http://localhost:4000/api/consumer/store\"\n  }\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{HOST_URL}}:{{FEDERATED_CATALOG_MANAGEMENT_PORT}}/management/v3/transferprocesses",
									"host": [
										"{{HOST_URL}}"
									],
									"port": "{{FEDERATED_CATALOG_MANAGEMENT_PORT}}",
									"path": [
										"management",
										"v3",
										"transferprocesses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Start Transfer from FC Docker",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// get the id of one asset and save it as an environment variable",
											"if(pm.response.code == 200){",
											"    pm.environment.set(\"CONTRACT_ID\", pm.response.json()[\"@id\"]);",
											"",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"@type\": \"TransferRequestDto\",\n  \"connectorId\": \"provider-base\",\n  \"counterPartyAddress\": \"http://provider-base:{{PROVIDER_PROTOCOL_PORT}}/protocol\",\n  \"contractId\": \"{{CONTRACT_AGREEMENT_ID}}\",\n  \"assetId\": \"{{ASSET_ID}}\",\n  \"protocol\": \"dataspace-protocol-http\",\n  \"transferType\": \"HttpData-PUSH\",\n  \"dataDestination\": {\n    \"type\": \"HttpData\",\n    \"baseUrl\": \"http://request-logger:4000/api/consumer/store\"\n  }\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{HOST_URL}}:{{FEDERATED_CATALOG_MANAGEMENT_PORT}}/management/v3/transferprocesses",
									"host": [
										"{{HOST_URL}}"
									],
									"port": "{{FEDERATED_CATALOG_MANAGEMENT_PORT}}",
									"path": [
										"management",
										"v3",
										"transferprocesses"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Participant Directory",
					"item": [
						{
							"name": "Get Node Directory",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{HOST_URL}}:{{FEDERATED_CATALOG_MANAGEMENT_PORT}}/management/v1alpha/directory",
									"host": [
										"{{HOST_URL}}"
									],
									"port": "{{FEDERATED_CATALOG_MANAGEMENT_PORT}}",
									"path": [
										"management",
										"v1alpha",
										"directory"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Node Directory",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "  {\n    \"name\": \"Default Base Provider\",\n    \"id\": \"provider-base\",\n    \"url\": \"http://localhost:19194/protocol\",\n    \"supportedProtocols\": [\"dataspace-protocol-http\"],\n    \"@context\": {\n        \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{HOST_URL}}:{{FEDERATED_CATALOG_MANAGEMENT_PORT}}/management/v1alpha/directory",
									"host": [
										"{{HOST_URL}}"
									],
									"port": "{{FEDERATED_CATALOG_MANAGEMENT_PORT}}",
									"path": [
										"management",
										"v1alpha",
										"directory"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Node Directory Docker",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "  {\n    \"name\": \"Default Base Provider\",\n    \"id\": \"provider-base\",\n    \"url\": \"http://provider-base:19194/protocol\",\n    \"supportedProtocols\": [\"dataspace-protocol-http\"],\n        \"@context\": {\n            \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n        }\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{HOST_URL}}:{{FEDERATED_CATALOG_MANAGEMENT_PORT}}/management/v1alpha/directory",
									"host": [
										"{{HOST_URL}}"
									],
									"port": "{{FEDERATED_CATALOG_MANAGEMENT_PORT}}",
									"path": [
										"management",
										"v1alpha",
										"directory"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Node Directory Consumer",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "  {\n    \"name\": \"Default Base Consumer\",\n    \"id\": \"consumer-base\",\n    \"@context\": {\n        \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n    },\n    \"claims\": [\"{\\\"location\\\": \\\"eu\\\"}\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{HOST_URL}}:{{FEDERATED_CATALOG_MANAGEMENT_PORT}}/management/v1alpha/directory",
									"host": [
										"{{HOST_URL}}"
									],
									"port": "{{FEDERATED_CATALOG_MANAGEMENT_PORT}}",
									"path": [
										"management",
										"v1alpha",
										"directory"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Node Directory eBIRD",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "    {\n        \"name\": \"Template eBIRD\",\n        \"id\": \"provider-ebird\",\n        \"url\": \"http://localhost:17194/protocol\",\n        \"supportedProtocols\": [\"dataspace-protocol-http\"],\n        \"@context\": {\n            \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n        }\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{HOST_URL}}:{{FEDERATED_CATALOG_MANAGEMENT_PORT}}/management/v1alpha/directory",
									"host": [
										"{{HOST_URL}}"
									],
									"port": "{{FEDERATED_CATALOG_MANAGEMENT_PORT}}",
									"path": [
										"management",
										"v1alpha",
										"directory"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Node Directory eBIRD Docker",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "    {\n        \"name\": \"Template eBIRD\",\n        \"id\": \"provider-ebird\",\n        \"url\": \"http://provider-ebird:17194/protocol\",\n        \"supportedProtocols\": [\"dataspace-protocol-http\"],\n        \"@context\": {\n            \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n        }\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{HOST_URL}}:{{FEDERATED_CATALOG_MANAGEMENT_PORT}}/management/v1alpha/directory",
									"host": [
										"{{HOST_URL}}"
									],
									"port": "{{FEDERATED_CATALOG_MANAGEMENT_PORT}}",
									"path": [
										"management",
										"v1alpha",
										"directory"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Node Directory",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{HOST_URL}}:{{FEDERATED_CATALOG_MANAGEMENT_PORT}}/management/v1alpha/directory/consumer-base",
									"host": [
										"{{HOST_URL}}"
									],
									"port": "{{FEDERATED_CATALOG_MANAGEMENT_PORT}}",
									"path": [
										"management",
										"v1alpha",
										"directory",
										"consumer-base"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"auth": {
				"type": "apikey",
				"apikey": [
					{
						"key": "key",
						"value": "x-api-key",
						"type": "string"
					},
					{
						"key": "value",
						"value": "managementApiKeyFederatedCatalog",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Transfer",
			"item": [
				{
					"name": "Get Provider Catalog",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// get the id of one asset and save it as an environment variable",
									"if(pm.response.code == 200){",
									"    const dcat_dataset = pm.response.json()[\"dcat:dataset\"]",
									"    if (Array.isArray(dcat_dataset)) {",
									"        pm.environment.set(\"ASSET_ID\", dcat_dataset[0][\"@id\"]);",
									"        pm.environment.set(\"CONTRACT_OFFER_ID\", dcat_dataset[0][\"odrl:hasPolicy\"][\"@id\"]);",
									"    } else {",
									"        pm.environment.set(\"ASSET_ID\", dcat_dataset[\"@id\"]);",
									"        pm.environment.set(\"CONTRACT_OFFER_ID\", dcat_dataset[\"odrl:hasPolicy\"][\"@id\"]);",
									"    }",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"counterPartyAddress\": \"{{HOST_URL}}:{{PROVIDER_PROTOCOL_PORT}}/protocol\",\n  \"protocol\": \"dataspace-protocol-http\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{CONSUMER_MANAGEMENT_PORT}}/management/v3/catalog/request",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{CONSUMER_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"catalog",
								"request"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Provider Catalog Docker",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// get the id of one asset and save it as an environment variable",
									"if(pm.response.code == 200){",
									"    const dcat_dataset = pm.response.json()[\"dcat:dataset\"]",
									"    if (Array.isArray(dcat_dataset)) {",
									"        pm.environment.set(\"ASSET_ID\", dcat_dataset[0][\"@id\"]);",
									"        pm.environment.set(\"CONTRACT_OFFER_ID\", dcat_dataset[0][\"odrl:hasPolicy\"][\"@id\"]);",
									"    } else {",
									"        pm.environment.set(\"ASSET_ID\", dcat_dataset[\"@id\"]);",
									"        pm.environment.set(\"CONTRACT_OFFER_ID\", dcat_dataset[\"odrl:hasPolicy\"][\"@id\"]);",
									"    }",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"counterPartyAddress\": \"http://provider-base:{{PROVIDER_PROTOCOL_PORT}}/protocol\",\n  \"protocol\": \"dataspace-protocol-http\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{CONSUMER_MANAGEMENT_PORT}}/management/v3/catalog/request",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{CONSUMER_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"catalog",
								"request"
							]
						}
					},
					"response": []
				},
				{
					"name": "Negotiate Contract",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// get the id of one asset and save it as an environment variable",
									"if(pm.response.code == 200){",
									"    pm.environment.set(\"CONTRACT_ID\", pm.response.json()[\"@id\"]);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"@type\": \"ContractRequest\",\n  \"counterPartyAddress\": \"{{HOST_URL}}:{{PROVIDER_PROTOCOL_PORT}}/protocol\",\n  \"protocol\": \"dataspace-protocol-http\",\n  \"policy\": {\n    \"@context\": \"http://www.w3.org/ns/odrl.jsonld\",\n    \"@id\": \"{{CONTRACT_OFFER_ID}}\",\n    \"@type\": \"Offer\",\n    \"assigner\": \"provider-base\",\n    \"target\": \"{{ASSET_ID}}\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{CONSUMER_MANAGEMENT_PORT}}/management/v3/contractnegotiations",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{CONSUMER_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"contractnegotiations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Contract Negotiation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// get the id of one asset and save it as an environment variable",
									"if(pm.response.code == 200){",
									"    pm.environment.set(\"CONTRACT_AGREEMENT_ID\", pm.response.json()[\"contractAgreementId\"]);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{CONSUMER_MANAGEMENT_PORT}}/management/v3/contractnegotiations/{{CONTRACT_ID}}",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{CONSUMER_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"contractnegotiations",
								"{{CONTRACT_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Negotiate Contract Docker",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// get the id of one asset and save it as an environment variable",
									"if(pm.response.code == 200){",
									"    pm.environment.set(\"CONTRACT_ID\", pm.response.json()[\"@id\"]);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"@type\": \"ContractRequest\",\n  \"counterPartyAddress\": \"http://provider-base:{{PROVIDER_PROTOCOL_PORT}}/protocol\",\n  \"protocol\": \"dataspace-protocol-http\",\n  \"policy\": {\n    \"@context\": \"http://www.w3.org/ns/odrl.jsonld\",\n    \"@id\": \"{{CONTRACT_OFFER_ID}}\",\n    \"@type\": \"Offer\",\n    \"assigner\": \"provider-base\",\n    \"target\": \"{{ASSET_ID}}\"\n  },\n  \"callbackAddresses\": [{\n    \"transactional\": false,\n    \"uri\": \"http://consumer-base:29194\",\n    \"events\": [\"contract.negotiation\", \"transfer.process\"]\n    }]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{CONSUMER_MANAGEMENT_PORT}}/management/v3/contractnegotiations",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{CONSUMER_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"contractnegotiations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Start Transfer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"@type\": \"TransferRequestDto\",\n  \"connectorId\": \"provider-base\",\n  \"counterPartyAddress\": \"{{HOST_URL}}:{{PROVIDER_PROTOCOL_PORT}}/protocol\",\n  \"contractId\": \"{{CONTRACT_AGREEMENT_ID}}\",\n  \"assetId\": \"{{ASSET_ID}}\",\n  \"protocol\": \"dataspace-protocol-http\",\n  \"transferType\": \"HttpData-PUSH\",\n  \"dataDestination\": {\n    \"type\": \"HttpData\",\n    \"baseUrl\": \"http://localhost:4000/api/consumer/store\"\n  }\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{CONSUMER_MANAGEMENT_PORT}}/management/v3/transferprocesses",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{CONSUMER_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"transferprocesses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Start Transfer Docker",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"@context\": {\n    \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n  },\n  \"@type\": \"TransferRequestDto\",\n  \"connectorId\": \"provider-base\",\n  \"counterPartyAddress\": \"http://provider-base:{{PROVIDER_PROTOCOL_PORT}}/protocol\",\n  \"contractId\": \"{{CONTRACT_AGREEMENT_ID}}\",\n  \"assetId\": \"{{ASSET_ID}}\",\n  \"protocol\": \"dataspace-protocol-http\",\n  \"transferType\": \"HttpData-PUSH\",\n  \"dataDestination\": {\n    \"type\": \"HttpData\",\n    \"baseUrl\": \"http://request-logger:4000/api/consumer/store\"\n  }\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST_URL}}:{{CONSUMER_MANAGEMENT_PORT}}/management/v3/transferprocesses",
							"host": [
								"{{HOST_URL}}"
							],
							"port": "{{CONSUMER_MANAGEMENT_PORT}}",
							"path": [
								"management",
								"v3",
								"transferprocesses"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "apikey",
				"apikey": [
					{
						"key": "key",
						"value": "x-api-key",
						"type": "string"
					},
					{
						"key": "value",
						"value": "managementApiKeyConsumerBase",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"requests": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"requests": {},
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "HOST_URL",
			"value": "http://localhost"
		},
		{
			"key": "CONSUMER_HTTP_PORT",
			"value": "29191"
		},
		{
			"key": "CONSUMER_MANAGEMENT_PORT",
			"value": "29193"
		},
		{
			"key": "PROVIDER_HTTP_PORT",
			"value": "19191"
		},
		{
			"key": "PROVIDER_MANAGEMENT_PORT",
			"value": "19193"
		},
		{
			"key": "PROVIDER_PROTOCOL_PORT",
			"value": "19194"
		},
		{
			"key": "FEDERATED_CATALOG_HTTP",
			"value": "39191"
		},
		{
			"key": "FEDERATED_CATALOG_QUERY_PORT",
			"value": "39195"
		},
		{
			"key": "FEDERATED_CATALOG_MANAGEMENT_PORT",
			"value": "39193"
		}
	]
}